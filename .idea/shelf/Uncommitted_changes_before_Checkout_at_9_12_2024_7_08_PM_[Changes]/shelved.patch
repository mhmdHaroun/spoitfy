Index: src/main/java/com/example/Spotify/config/JwtAuthenticationFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//package com.example.Spotify.config;\r\n//\r\n//import com.example.Spotify.service.JWTService;\r\n//import com.example.Spotify.service.UserDetailsService;\r\n////import jakarta.annotation.Nullable;\r\n//import jakarta.servlet.FilterChain;\r\n//import jakarta.servlet.ServletException;\r\n//import jakarta.servlet.http.HttpServletRequest;\r\n//import jakarta.servlet.http.HttpServletResponse;\r\n//import lombok.RequiredArgsConstructor;\r\n//import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\r\n//import org.springframework.security.core.context.SecurityContextHolder;\r\n//import org.springframework.security.core.userdetails.UserDetails;\r\n//import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;\r\n//import org.springframework.stereotype.Component;\r\n//import org.apache.commons.lang3.StringUtils;\r\n//import org.springframework.web.filter.OncePerRequestFilter;\r\n//import org.springframework.lang.Nullable;\r\n//import java.io.IOException;\r\n//\r\n//    /// here i used Nullable from org.springframework.lang\r\n//    //  not from jakarta.annotation.Nullable\r\n//\r\n//\r\n//\r\n//@Component\r\n//@RequiredArgsConstructor\r\n////@EnableWebSecurity\r\n//public class JwtAuthenticationFilter extends OncePerRequestFilter {\r\n//\r\n//    private final JWTService jwtService;\r\n//    private final UserDetailsService userDetailsService;\r\n//\r\n//    @Override\r\n//    protected void doFilterInternal(\r\n//            @Nullable HttpServletRequest request,\r\n//            @Nullable HttpServletResponse response,\r\n//            @Nullable FilterChain filterChain\r\n//    ) throws ServletException, IOException {\r\n//\r\n//        //this is the header that contains token\r\n//        final String authorizationHeader = request.getHeader(\"Authorization\");\r\n//        final String jwt;\r\n//        final String userEmail;\r\n//\r\n//        //checking that token exist\r\n//\r\n//        if (StringUtils.isEmpty(authorizationHeader) || !StringUtils.startsWith(authorizationHeader, \"Bearer \")) {\r\n//            filterChain.doFilter(request, response);//pass next filter Remember its chain of responsibility pattern\r\n//            return;\r\n//        }\r\n//\r\n//        jwt = authorizationHeader.substring(7); //extracting token from after \"Bearer \"\r\n//        //jwtService is used to manipulate token extract userEmail from token\r\n//        userEmail = jwtService.extractUserName(jwt);  //next step to extract user name to be able to chech for its details in UserDetailsService\r\n//\r\n//        if (StringUtils.isNotEmpty(userEmail) && SecurityContextHolder.getContext().getAuthentication() == null) {\r\n//            UserDetails userDetails = userDetailsService.userDetailsService().loadUserByUsername(userEmail);\r\n//\r\n//            if (jwtService.isTokenValid(jwt, userDetails)) {\r\n//                UsernamePasswordAuthenticationToken authToken = new UsernamePasswordAuthenticationToken(\r\n//                        userDetails,\r\n//                        null,\r\n//                        userDetails.getAuthorities()\r\n//                );\r\n//                authToken.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\r\n//                SecurityContextHolder.getContext().setAuthentication(authToken);\r\n//            }\r\n//        }\r\n//        filterChain.doFilter(request, response);// as this is filter chain so always pass to next filter\r\n//    }\r\n//}\r\n//\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/Spotify/config/JwtAuthenticationFilter.java b/src/main/java/com/example/Spotify/config/JwtAuthenticationFilter.java
--- a/src/main/java/com/example/Spotify/config/JwtAuthenticationFilter.java	
+++ b/src/main/java/com/example/Spotify/config/JwtAuthenticationFilter.java	
@@ -1,4 +1,4 @@
-//package com.example.Spotify.config;
+ //package com.example.Spotify.config;
 //
 //import com.example.Spotify.service.JWTService;
 //import com.example.Spotify.service.UserDetailsService;
